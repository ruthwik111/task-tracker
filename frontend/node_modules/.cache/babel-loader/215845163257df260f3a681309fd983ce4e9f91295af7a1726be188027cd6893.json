{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\task-tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Auth from './components/Auth';\nimport Task from './components/Task';\nimport Project from './components/Project'; // Import Project component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Task, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Auth, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = App;\napp.use((err, req, res, next) => {\n  console.error(err); // Log the error for debugging\n  res.status(500).json({\n    message: 'Internal Server Error'\n  });\n});\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Auth","Task","Project","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","app","use","err","req","res","next","console","error","status","json","message","$RefreshReg$"],"sources":["C:/Users/User/Desktop/task-tracker/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Auth from './components/Auth';\r\nimport Task from './components/Task';\r\nimport Project from './components/Project'; // Import Project component\r\n\r\nconst App = () => {\r\n    const [token, setToken] = useState(null);   \r\n\r\n    return (\r\n        <div>\r\n            {token ? (\r\n                <>\r\n                    <Task token={token} />\r\n                    <Project token={token} /> {/* Include Project component */}\r\n                </>\r\n            ) : (\r\n                <Auth setToken={setToken} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\napp.use((err, req, res, next) => {\r\n    console.error(err); // Log the error for debugging\r\n    res.status(500).json({ message: 'Internal Server Error' });\r\n  });\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,oBACIK,OAAA;IAAAO,QAAA,EACKF,KAAK,gBACFL,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBACIP,OAAA,CAACH,IAAI;QAACQ,KAAK,EAAEA;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtBX,OAAA,CAACF,OAAO;QAACO,KAAK,EAAEA;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA,eAC5B,CAAC,gBAEHX,OAAA,CAACJ,IAAI;MAACU,QAAQ,EAAEA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACP,EAAA,CAfID,GAAG;AAAAS,EAAA,GAAHT,GAAG;AAiBTU,GAAG,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC7BC,OAAO,CAACC,KAAK,CAACL,GAAG,CAAC,CAAC,CAAC;EACpBE,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE;EAAwB,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEJ,eAAepB,GAAG;AAAC,IAAAS,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}